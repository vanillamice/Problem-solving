#include<iostream>
#include<vector>
#include<string>
#include<cstring>
#include<cmath>
#include<numeric>
#include<algorithm>
#include<set>
#include<sstream>
#include<bitset>
 
using namespace std;
 
using ll = long long;
 
int main(){
ios_base::sync_with_stdio(false);
 
int size1, size2;
 
char arr[101][101];
char president;
 
cin >> size1 >> size2 >> president;

 int h = 0;
set<char> ans;
 
//input loop
for(int i = 0; i < size1; i++){
	for(int j = 0; j < size2; j++){
	cin >> arr[i][j];
	}
}
 
 
//solution
 
for(int x = 0; x < size1; x++){
	for(int y = 0; y < size2; y++){
		if(arr[x][y] == president){
				if(arr[x][y+1] != president && arr[x][y+1] != '.' && y+1 <= size2-1){
					ans.insert(arr[x][y+1]);
				}
			
				if(arr[x][y-1] != president && arr[x][y-1] != '.' && y-1 > -1 ){
					ans.insert(arr[x][y-1]);
				}
				if(arr[x+1][y] != president && arr[x+1][y] != '.' && x+1 <= size1-1){
					ans.insert(arr[x+1][y]);	
				}
				if(arr[x-1][y] != president && arr[x-1][y] != '.' && x-1 > -1 ){
					ans.insert(arr[x-1][y]);		
				}
														
			}
		}
 
}
 
 
cout << ans.size() << endl;
 
return 0;
}
